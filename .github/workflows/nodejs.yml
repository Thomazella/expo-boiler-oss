# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  cancel_self:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel this workflow on a new push
        uses: styfle/cancel-workflow-action@0.4.0
        with:
          access_token: ${{ github.token }}

  check_skip:
    runs-on: ubuntu-latest
    if: |
      !contains(format('{0} {1} {2}', github.event.head_commit.message, github.event.pull_request.title, github.event.pull_request.body), '[skip ci]')
    steps:
      - name: Check if [skip ci] is present in github
        run: echo hi

  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    needs: check_skip
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Node.js v${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: |
          yarn --frozen-lockfile

      - name: Test
        run: |
          yarn test --coverage

      - name: Lint
        run: |
          yarn lint

      - name: Type check
        run: |
          yarn tsc

      - name: Upload coverage to codecov
        run: |
          bash <(curl -s https://codecov.io/bash) -t ${{ secrets.CODECOV_TOKEN }}
